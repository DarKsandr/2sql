import{_ as n,o as r,c as a,a as s,b as t,d as l,F as o}from"./index-BoRpKmuU.js";const i={};function g(d,e){return r(),a(o,null,[e[0]||(e[0]=s(`<p>Оператор SQL FULL JOIN осуществляет формирование таблицы из записей двух или нескольких таблиц. В операторе SQL FULL JOIN не важен порядок следования таблиц, он никак не влияет на окончательный результат, так как оператор является симметричным.</p><p>Оператор SQL FULL JOIN можно воспринимать как сочетание операторов <a title="Оператор SQL INNER JOIN - примеры использования" href="https://web.archive.org/web/20231208195707/http://2sql.ru/advanced/sql-inner-join/" target="_blank">SQL INNER JOIN</a> + <a title="Оператор SQL LEFT JOIN - примеры использования" href="https://web.archive.org/web/20231208195707/http://2sql.ru/advanced/sql-left-join/" target="_blank">SQL LEFT JOIN</a> + <a title="Оператор SQL RIGHT JOIN - примеры использования" href="https://web.archive.org/web/20231208195707/http://2sql.ru/advanced/sql-right-join/" target="_blank">SQL RIGHT JOIN</a>. Алгоритм его работы следующий:</p><ol><li>Сначала формируется таблица на основе внутреннего соединения (оператор <a title="Оператор SQL INNER JOIN - примеры использования" href="https://web.archive.org/web/20231208195707/http://2sql.ru/advanced/sql-inner-join/" target="_blank">SQL INNER JOIN</a>).</li><li>Затем, в таблицу добавляются значения не вошедшие в результат формирования из правой таблицы (оператор <a title="Оператор SQL LEFT JOIN - примеры использования" href="https://web.archive.org/web/20231208195707/http://2sql.ru/advanced/sql-left-join/" target="_blank">SQL LEFT JOIN</a>). Для них, соответствующие записи из правой таблицы заполняются значениями NULL.</li><li>Наконец, в таблицу добавляются значения не вошедшие в результат формирования из левой таблицы (оператор <a title="Оператор SQL RIGHT JOIN - примеры использования" href="https://web.archive.org/web/20231208195707/http://2sql.ru/advanced/sql-right-join/" target="_blank">SQL RIGHT JOIN</a>). Для них, соответствующие записи из левой таблицы заполняются значениями NULL.</li></ol><p>Оператор SQL FULL JOIN имеет следующий синтаксис:</p><pre class="brush: sql; title: ; notranslate" title="">SELECT
    column_names [,... n]
FROM
    Table_1 FULL JOIN Table_2
ON condition
</pre><hr><p><strong>Примеры оператора SQL FULL JOIN. </strong>Имеются две таблицы:</p><p><strong><abbr title="AuthorID - номер автора; AuthorName - имя автора">Authors</abbr></strong> — содержит в себе информацию об авторах книг:</p>`,8)),e[1]||(e[1]=t("table",{border:"1",cellspacing:"0"},[t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"AuthorID")]),t("td",{style:{"text-align":"center"}},[t("strong",null,"AuthorName")])]),t("tr",null,[t("td",{style:{"text-align":"center"}},"1"),t("td",{style:{"text-align":"center"}},"Bruce Eckel")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"2"),t("td",{style:{"text-align":"center"}},"Robert Lafore")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"3"),t("td",{style:{"text-align":"center"}},"Andrew Tanenbaum")])])],-1)),e[2]||(e[2]=t("p",null,[t("strong",null,[t("abbr",{title:"BookID - номер книги; BookName - название книги"},"Books")]),l(" — содержит в себе информацию о названии книг:")],-1)),e[3]||(e[3]=t("table",{border:"1",cellspacing:"0"},[t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"BookID")]),t("td",{style:{"text-align":"center"}},[t("strong",null,"BookName")])]),t("tr",null,[t("td",{style:{"text-align":"center"}},"3"),t("td",{style:{"text-align":"center"}},"Modern Operating System")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"1"),t("td",{style:{"text-align":"center"}},"Thinking in Java")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"3"),t("td",{style:{"text-align":"center"}},"Computer Architecture")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"4"),t("td",{style:{"text-align":"center"}},"Programming in Scala")])])],-1)),e[4]||(e[4]=t("p",null,"В таблице Books поле BookID являются внешним ключом и ссылаются на таблицу Authors.",-1)),e[5]||(e[5]=t("p",null,[t("strong",null,"Пример 1. "),l("Используя оператор SQL FULL JOIN вывести авторов всех книг и книги всех авторов:")],-1)),e[6]||(e[6]=t("pre",{class:"brush: sql; title: ; notranslate",title:""},`SELECT *
FROM Authors FULL JOIN Books
ON Authors.AuthorID = Books.BookID
`,-1)),e[7]||(e[7]=t("p",null,[t("em",null,"Результирующая таблица будет выглядеть следующим образом:")],-1)),e[8]||(e[8]=t("table",{border:"1",cellspacing:"0"},[t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"center"}},[t("strong",null,"Authors.AuthorID")]),t("td",{style:{"text-align":"center"}},[t("strong",null,[l("Authors."),t("strong",null,"AuthorName")])]),t("td",{style:{"text-align":"center"}},[t("strong",null,"Books.BookID")]),t("td",{style:{"text-align":"center"}},[t("strong",null,"Books.BookName")])]),t("tr",null,[t("td",{style:{"text-align":"center"}},"1"),t("td",{style:{"text-align":"center"}},"Bruce Eckel"),t("td",{style:{"text-align":"center"}},"1"),t("td",{style:{"text-align":"center"}},"Thinking in Java")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"2"),t("td",{style:{"text-align":"center"}},"Robert Lafore"),t("td",{style:{"text-align":"center"}},"NULL"),t("td",{style:{"text-align":"center"}},"NULL")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"3"),t("td",{style:{"text-align":"center"}},"Andrew Tanenbaum"),t("td",{style:{"text-align":"center"}},"3"),t("td",{style:{"text-align":"center"}},"Modern Operating System")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"3"),t("td",{style:{"text-align":"center"}},"Andrew Tanenbaum"),t("td",{style:{"text-align":"center"}},"3"),t("td",{style:{"text-align":"center"}},"Computer Architecture")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"NULL"),t("td",{style:{"text-align":"center"}},"NULL"),t("td",{style:{"text-align":"center"}},"4"),t("td",{style:{"text-align":"center"}},"Programming in Scala")])])],-1))],64)}const c=n(i,[["render",g]]);export{c as default};
